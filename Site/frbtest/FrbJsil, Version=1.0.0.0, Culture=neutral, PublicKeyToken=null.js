/* Generated by JSIL v0.7.8 build 17777. See http://jsil.org/ for more information. */ 
var $asm00 = JSIL.DeclareAssembly("FrbJsil, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("FlatRedBall");
/* class FlatRedBall.FlatRedBallServices */ 

(function FlatRedBallServices$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm03.Microsoft.Xna.Framework.Game)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.Microsoft.Xna.Framework.GraphicsDeviceManager)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.FlatRedBall.Graphics.Renderer)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm03.Microsoft.Xna.Framework.GameTime)) ();
  };

  function FlatRedBallServices_Draw () {
    $thisType.UpdateDependencies();
    $thisType.RenderAll();
  };

  function FlatRedBallServices_InitializeFlatRedBall (game, graphics) {
    $T02().Initialize(graphics);
  };

  function FlatRedBallServices_RenderAll () {
    $T02().Draw();
  };

  function FlatRedBallServices_Update (gameTime) {
  };

  function FlatRedBallServices_UpdateDependencies () {
  };

  JSIL.MakeStaticClass("FlatRedBall.FlatRedBallServices", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "Draw", 
      new JSIL.MethodSignature(null, [], []), 
      FlatRedBallServices_Draw
    );

    $.Method({Static:true , Public:true }, "InitializeFlatRedBall", 
      new JSIL.MethodSignature(null, [$asm03.TypeRef("Microsoft.Xna.Framework.Game"), $asm03.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceManager")], []), 
      FlatRedBallServices_InitializeFlatRedBall
    );

    $.Method({Static:true , Public:true }, "RenderAll", 
      new JSIL.MethodSignature(null, [], []), 
      FlatRedBallServices_RenderAll
    );

    $.Method({Static:true , Public:true }, "Update", 
      new JSIL.MethodSignature(null, [$asm03.TypeRef("Microsoft.Xna.Framework.GameTime")], []), 
      FlatRedBallServices_Update
    );

    $.Method({Static:true , Public:true }, "UpdateDependencies", 
      new JSIL.MethodSignature(null, [], []), 
      FlatRedBallServices_UpdateDependencies
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("FlatRedBall.Graphics");
/* class FlatRedBall.Graphics.Renderer */ 

(function Renderer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm02.Microsoft.Xna.Framework.Vector2)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.FlatRedBall.SpriteManager)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.FlatRedBall.Sprite)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm05.Microsoft.Xna.Framework.Graphics.SpriteBatch)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm02.Microsoft.Xna.Framework.Color)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm05.Microsoft.Xna.Framework.Graphics.IGraphicsDeviceService)) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm05.Microsoft.Xna.Framework.Graphics.IGraphicsDeviceService.get_GraphicsDevice)) ();
  };

  function Renderer_Draw () {
    $thisType.DrawCamera(null, null, null);
  };

  function Renderer_DrawCamera (first, second, third) {
    var $temp00, $temp01;
    $temp01 = new ($T01())();

    for (var a$0 = $T02().get_OrderedByDistanceFromCameraSprites()._items, i$0 = 0, l$0 = $T02().get_OrderedByDistanceFromCameraSprites()._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var sprite = a$0[i$0];
      $thisType.mSpriteBatch.Begin();
      $thisType.mSpriteBatch.Draw(
        sprite.Sprite$Texture$value, 
        ($temp01._ctor(sprite.Sprite$X$value, sprite.Sprite$Y$value), 
          $temp01), 
        $T05().get_White()
      );
      $thisType.mSpriteBatch.End();
    }
  };

  function Renderer_Initialize (graphics) {
    $thisType.mSpriteBatch = new ($T04())($IM00().Call(graphics, null));
  };

  JSIL.MakeStaticClass("FlatRedBall.Graphics.Renderer", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "Draw", 
      new JSIL.MethodSignature(null, [], []), 
      Renderer_Draw
    );

    $.Method({Static:true , Public:false}, "DrawCamera", 
      new JSIL.MethodSignature(null, [
          $.Object, $.Object, 
          $.Object
        ], []), 
      Renderer_DrawCamera
    );

    $.Method({Static:true , Public:false}, "Initialize", 
      new JSIL.MethodSignature(null, [$asm05.TypeRef("Microsoft.Xna.Framework.Graphics.IGraphicsDeviceService")], []), 
      Renderer_Initialize
    );

    $.Field({Static:true , Public:false}, "mSpriteBatch", $asm05.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteBatch")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class FlatRedBall.Sprite */ 

(function Sprite$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm05.Microsoft.Xna.Framework.Graphics.Texture2D)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Single)) ();
  };

  function Sprite__ctor () {
  };

  function Sprite_get_Texture () {
    return this.Sprite$Texture$value;
  };

  function Sprite_get_X () {
    return +this.Sprite$X$value;
  };

  function Sprite_get_Y () {
    return +this.Sprite$Y$value;
  };

  function Sprite_set_Texture (value) {
    this.Sprite$Texture$value = value;
  };

  function Sprite_set_X (value) {
    this.Sprite$X$value = +value;
  };

  function Sprite_set_Y (value) {
    this.Sprite$Y$value = +value;
  };

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "FlatRedBall.Sprite", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], []), 
      Sprite__ctor
    );

    $.Method({Static:false, Public:true }, "get_Texture", 
      new JSIL.MethodSignature($asm05.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), [], []), 
      Sprite_get_Texture
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_X", 
      new JSIL.MethodSignature($.Single, [], []), 
      Sprite_get_X
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Y", 
      new JSIL.MethodSignature($.Single, [], []), 
      Sprite_get_Y
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Texture", 
      new JSIL.MethodSignature(null, [$asm05.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")], []), 
      Sprite_set_Texture
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_X", 
      new JSIL.MethodSignature(null, [$.Single], []), 
      Sprite_set_X
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Y", 
      new JSIL.MethodSignature(null, [$.Single], []), 
      Sprite_set_Y
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Sprite$Texture$value", $asm05.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Sprite$X$value", $.Single)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Sprite$Y$value", $.Single)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "Texture", $asm05.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Property({Static:false, Public:true }, "X", $.Single);

    $.Property({Static:false, Public:true }, "Y", $.Single);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class FlatRedBall.SpriteManager */ 

(function SpriteManager$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm00.FlatRedBall.Sprite))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm05.Microsoft.Xna.Framework.Graphics.Texture2D)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.FlatRedBall.Sprite)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("FlatRedBall.Sprite")]), []))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm00.TypeRef("FlatRedBall.Sprite")], []))) ();
  };

  function SpriteManager_AddSprite$00 (texture) {
    var newSprite = new ($T02())();
    newSprite.Sprite$Texture$value = texture;
    $S01().CallStatic($thisType, "AddSprite", null, newSprite);
    return newSprite;
  };

  function SpriteManager_AddSprite$01 (spriteToAdd) {
    if (spriteToAdd !== null) {
      $thisType.mOrderedByDistanceFromCameraSprites.Add(spriteToAdd);
    }
  };

  function SpriteManager_get_OrderedByDistanceFromCameraSprites () {
    return $thisType.mOrderedByDistanceFromCameraSprites;
  };

  JSIL.MakeStaticClass("FlatRedBall.SpriteManager", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "AddSprite", 
      new JSIL.MethodSignature($asm00.TypeRef("FlatRedBall.Sprite"), [$asm05.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")], []), 
      SpriteManager_AddSprite$00
    );

    $.Method({Static:true , Public:true }, "AddSprite", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("FlatRedBall.Sprite")], []), 
      SpriteManager_AddSprite$01
    );

    $.Method({Static:true , Public:false}, "get_OrderedByDistanceFromCameraSprites", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("FlatRedBall.Sprite")]), [], []), 
      SpriteManager_get_OrderedByDistanceFromCameraSprites
    );

    $.Field({Static:true , Public:false}, "mOrderedByDistanceFromCameraSprites", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("FlatRedBall.Sprite")])); 
    function SpriteManager__cctor () {
      $thisType.mOrderedByDistanceFromCameraSprites = $S00().Construct();
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      new JSIL.MethodSignature(null, [], []), 
      SpriteManager__cctor
    );

    $.Property({Static:true , Public:false}, "OrderedByDistanceFromCameraSprites", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("FlatRedBall.Sprite")]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

