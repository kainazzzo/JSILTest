/* Generated by JSIL v0.7.8 build 17777. See http://jsil.org/ for more information. */ 
var $asm01 = JSIL.DeclareAssembly("JSILTest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.SetEntryPoint($asm01, $asm01.TypeRef("JSILTest.Program"), "Main", new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.String")])]));

JSIL.DeclareNamespace("JSILTest");
/* class JSILTest.Program */ 

(function Program$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize(System.Array.Of($asm07.System.String))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.JSILTest.Game1)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm03.Microsoft.Xna.Framework.Game)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.IDisposable)) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm07.System.IDisposable.Dispose)) ();
  };

  function Program_Main (args) {
    var game = new ($T01())();
    try {
      game.Run();
    } finally {
      if (game !== null) {
        $IM00().Call(game, null);
      }
    }
  };

  JSIL.MakeStaticClass("JSILTest.Program", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:false}, "Main", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.String])], []), 
      Program_Main
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class JSILTest.Game1 */ 

(function Game1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm03.Microsoft.Xna.Framework.Game)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.Microsoft.Xna.Framework.GraphicsDeviceManager)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm02.Microsoft.Xna.Framework.Content.ContentManager)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm03.Microsoft.Xna.Framework.GameTime)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.FlatRedBall.FlatRedBallServices)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm05.Microsoft.Xna.Framework.Graphics.Texture2D)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.FlatRedBall.SpriteManager)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.FlatRedBall.Sprite)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm00.TypeRef("FlatRedBall.Sprite"), [$asm05.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")], []))) ();
  };

  function Game1__ctor () {
    $T00().prototype._ctor.call(this);
    this.graphics = new ($T01())(this);
    this.get_Content().set_RootDirectory("Content");
  };

  function Game1_Draw (gameTime) {
    $T04().Draw();
    $T00().prototype.Draw.call(this, gameTime);
  };

  function Game1_Initialize () {
    $T04().InitializeFlatRedBall(this, this.graphics);
    this.mTexture = this.get_Content().Load$b1($T05())("chickennugents");
    this.sprite = $S00().CallStatic($T06(), "AddSprite", null, this.mTexture);
    $T00().prototype.Initialize.call(this);
  };

  function Game1_Update (gameTime) {
    var $temp00;
    $T04().Update(gameTime);
    ($temp00 = +(this.sprite.Sprite$X$value + 1), 
      this.sprite.Sprite$X$value = +$temp00, 
      $temp00);
    $T00().prototype.Update.call(this, gameTime);
  };

  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Microsoft.Xna.Framework.Game"), 
      Name: "JSILTest.Game1", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], []), 
      Game1__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "Draw", 
      new JSIL.MethodSignature(null, [$asm03.TypeRef("Microsoft.Xna.Framework.GameTime")], []), 
      Game1_Draw
    );

    $.Method({Static:false, Public:false, Virtual:true }, "Initialize", 
      new JSIL.MethodSignature(null, [], []), 
      Game1_Initialize
    );

    $.Method({Static:false, Public:false, Virtual:true }, "Update", 
      new JSIL.MethodSignature(null, [$asm03.TypeRef("Microsoft.Xna.Framework.GameTime")], []), 
      Game1_Update
    );

    $.Field({Static:false, Public:false}, "graphics", $asm03.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceManager")); 
    $.Field({Static:false, Public:false}, "sprite", $asm00.TypeRef("FlatRedBall.Sprite")); 
    $.Field({Static:false, Public:false}, "mTexture", $asm05.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")); 
    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

